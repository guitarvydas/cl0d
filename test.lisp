(defun test ()
  (let ((m (MAP/new `( (a . ,(lambda () "hello")) (b . ,(lambda () "world"))))))
    (% m 'a)))

(defun test2 ()
  (let ((m (MAP/new `( (a . ,(lambda () "hello")) (b . ,(lambda () "world"))))))
    (% m 'b)))

(defun test3 ()
  (let ((q (FIFO/new)))
    (% q 'enqueue 1)
    (% q 'enqueue 2)
    (% q 'enqueue 3)
    (% q '%contents)))

(defun test4 ()
  (let ((q (FIFO/new)))
    (% q 'enqueue 1)
    (% q 'enqueue 2)
    (% q 'enqueue 3)
    (% q 'dequeue)
    (% q 'dequeue)
    (% q 'dequeue)
    ))

(defun test5 ()
  (let ((q (FIFO/new)))
    (% q 'enqueue 1)
    (% q 'enqueue 2)
    (% q 'enqueue 3)
    (% q 'dequeue)
    (% q 'dequeue)
    (% q 'dequeue)
    (% q 'empty?)
    ))

(defun test6 ()
  (let ((echo (Echo/new "test")))
      ((%lookup echo 'handle) (InputMessage/new "stdin" "hello world"))
      ((%lookup echo 'outputs)))))
